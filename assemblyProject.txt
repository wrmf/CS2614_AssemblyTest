    ORG 10 //Start at memory location 10
FST, SKI       // look for input
    BUN FST   // Repeat until input
    CLA       // clear AC
    INP       // input to AC

STA NUM //Store input to NUM

SPA BUN AfterLoop //Skip directly to end if input is 0

ADD Dec-1 //Decrement COUNTER by one
STA COUNTER

SPA BUN AfterLoop //Skip to end if input was 1

LOOP, LDA COUNTER

MULTIPLY, STA MULT

LDA MULT //Load multiplication counter
ADD Dec-1 //Decrement by one
ADD Dec-1 //Decrement by one
STA MULT
SPA BUN AfterMultiplication
LDA NUM //Load final number
ADD NUM //Add once
STA NUM
LDA MULT
ADD Dec1
STA MULT

SZA BUN MULTIPLY //Continue multiplication if counter is not zero

AfterMultiplication, LDA COUNTER
ADD Dec-1
SZA BUN LOOP

AfterLoop, LDA NUM
OUT
CLE
OUT
AND OOOF
OUT
ADD HEX30
OUT


    OUT       // output char
    HLT       // quit
NUM, DEC 0   // Stores decimal number
COUNTER, DEC 0
MULT, DEC 0
CTR, DEC -8 //Second counter (for multiplication)
Dec-1, DEC -1
Dec1, DEC 1
OFOO, HEX 0F00
OOFO, HEX 00F0
OOOF, HEX 000F
HEX30, HEX 30
TEMP, DEC 0
    END       // End of the program